@page "/admin/orders"
@inherits OwningComponentBase<IOrderRepository>


<OrderTable TableTitle="UnShipped Orders" Orders="UnShippedOrders" ButtonLabel="Ship" OrderSelected="ShipOrder"/>
<OrderTable TableTitle="Shipped Orders" Orders="ShippedOrders" ButtonLabel="Reset" OrderSelected="ResetOrder" />
<button class="btn btn-info" @onclick="@(e => UpdateData())">Refresh Data</button>

@code {
    public IOrderRepository Repository => Service;

    public IEnumerable<Order> AllOrders { get; set; } = Enumerable.Empty<Order>();
    public IEnumerable<Order> UnShippedOrders { get; set; } = Enumerable.Empty<Order>();
    public IEnumerable<Order> ShippedOrders { get; set; } = Enumerable.Empty<Order>();

    protected async override Task OnInitializedAsync() => await UpdateData();

    private async Task UpdateData()
    {
        AllOrders = await Repository.Orders.ToListAsync();
        UnShippedOrders = AllOrders.Where(o => !o.Shipped);
        ShippedOrders = AllOrders.Where(o => o.Shipped);
    }

    public void ShipOrder(int id) => UpdateOrder(id, true); 
    public void ResetOrder(int id) => UpdateOrder(id, false);

    public void UpdateOrder(int id, bool shipValue)
    {
        var order = Repository.Orders.FirstOrDefault(o => o.OrderID == id);
        if(order is not null)
        {
            order.Shipped = shipValue;
            Repository.SaveOrder(order);
        }
    }
}